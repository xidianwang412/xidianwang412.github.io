<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>My Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-12-15T07:48:20.129Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Ylwang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Caffe网络层参数数解析</title>
    <link href="http://yoursite.com/2017/12/09/Caffe%E7%BD%91%E7%BB%9C%E5%B1%82%E5%8F%82%E6%95%B0%E6%95%B0%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2017/12/09/Caffe网络层参数数解析/</id>
    <published>2017-12-09T12:16:42.000Z</published>
    <updated>2017-12-15T07:48:20.129Z</updated>
    
    <content type="html"><![CDATA[<p>要运行caffe，需要先创建一个模型（model)，如比较常用的Lenet,Alexnet等， 而一个模型由多个层（layer）构成，每一层又由许多参数组成。要熟练使用caffe进行训练，最重要的就是学会配置文件（prototxt）的编写。层有很多种类型，比如Data,Convolution,Pooling等，层之间的数据流动是以Blobs的方式进行。</p><p>下面介绍一下常见的一些网络层，如数据层,卷积层,激活层,全连接层等。</p><h2 id="数据层"><a href="#数据层" class="headerlink" title="数据层"></a>数据层</h2><p>数据来源可以来自高效的数据库（如LevelDB和LMDB），也可以直接来自于内存。如果不是很注重效率的话，数据也可来自磁盘的hdf5文件和图片格式文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">layer &#123;</span><br><span class="line">  name: <span class="string">"cifar"</span></span><br><span class="line">  <span class="built_in">type</span>: <span class="string">"Data"</span></span><br><span class="line">  top: <span class="string">"data"</span>  <span class="comment">#用bottom表示输入,top表示输出，多个top代表有多个输出</span></span><br><span class="line">  top: <span class="string">"label"</span></span><br><span class="line">  include &#123;</span><br><span class="line">    phase: TRAIN <span class="comment">#训练网络分为训练阶段和测试阶段,如果没写include则表示该层即在测试中，又在训练中</span></span><br><span class="line">  &#125;</span><br><span class="line">  transform_param &#123;</span><br><span class="line">    mean_file: <span class="string">"examples/cifar10/mean.binaryproto"</span> <span class="comment">#用一个配置文件来进行均值的操作</span></span><br><span class="line">    transform_param &#123;</span><br><span class="line">    scale: 0.00390625  <span class="comment"># 1/255，用来对数据进行均一化  </span></span><br><span class="line">    mirror: 1  <span class="comment"># 1表示开启镜像，0表示关闭，也可用ture和false来表示</span></span><br><span class="line">    crop_size: 227  <span class="comment"># 剪裁一个 227*227的图块，在训练阶段随机剪裁，在测试阶段从中间裁剪</span></span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  data_param &#123;</span><br><span class="line">    <span class="built_in">source</span>: <span class="string">"examples/cifar10/cifar10_train_lmdb"</span> <span class="comment">#数据库来源</span></span><br><span class="line">    batch_size: 64 <span class="comment">#每次批处理的个数</span></span><br><span class="line">    backend: LMDB <span class="comment">#选用数据的名称</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>name: 表示该层的名称，可随意取；</li><li>type: 层类型，如果是Data，表示数据来源于LevelDB或LMDB。根据数据的来源不同，数据层的类型也不同（后面具体说明）。</li><li>top或bottom: 每一层用bottom来输入数据，用top来输出数据。如果只有top没有bottom，则此层只有输出，没有输入。反之亦然。如果有多个 top或多个bottom，表示有多个blobs数据的输入和输出。</li><li>data 与 label: 在数据层中，至少有一个命名为data的top。如果有第二个top，一般命名为label。 这种(data,label)配对是分类模型所必需的。</li><li>include: 一般训练的时候和测试的时候，模型的层是不一样的。该层（layer）是属于训练阶段的层，还是属于测试阶段的层，需要用include来指定。如果没有include参数，则表示该层既在训练模型中，又在测试模型中。</li><li>transform_param: 数据的预处理，可以将数据变换到定义的范围内。如设置scale为0.00390625，实际上就是1/255, 即将输入数据由0-255归一化到0-1之间, mean_file参数将所有输入数据减去一个平均值,表示将数据中心化.</li><li>data_param: 输入数据相关配置,来源方式,批处理大小,数据名称。</li></ul><h3 id="LMDB源"><a href="#LMDB源" class="headerlink" title="LMDB源"></a>LMDB源</h3><p>layer {<br>  name: “mnist”<br>  type: “Data”<br>  top: “data”<br>  top: “label”<br>  include {<br>    phase: TRAIN<br>  }<br>  transform_param {<br>    scale: 0.00390625<br>  }<br>  data_param {<br>    source: “examples/mnist/mnist_train_lmdb”<br>    batch_size: 64<br>    backend: LMDB<br>  }<br>}</p><h3 id="HDF5数据源"><a href="#HDF5数据源" class="headerlink" title="HDF5数据源"></a>HDF5数据源</h3><p>layer {<br>  name: “data”<br>  type: “HDF5Data”<br>  top: “data”<br>  top: “label”<br>  hdf5_data_param {<br>    source: “examples/hdf5_classification/data/train.txt”<br>    batch_size: 10<br>  }<br>}</p><h3 id="图片数据源"><a href="#图片数据源" class="headerlink" title="图片数据源"></a>图片数据源</h3><p>layer {<br>  name: “data”<br>  type: “ImageData” #类型<br>  top: “data”<br>  top: “label”<br>  transform_param {<br>    mirror: false<br>    crop_size: 227<br>    mean_file: “data/ilsvrc12/imagenet_mean.binaryproto”<br>  }<br>  image_data_param {<br>    source: “examples_temp\file_list.txt”<br>    batch_size: 50<br>    new_height: 256 #此参数对图片进行resize操作<br>    new_width: 256<br>  }<br>}</p><h2 id="Reshape层"><a href="#Reshape层" class="headerlink" title="Reshape层"></a>Reshape层</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;要运行caffe，需要先创建一个模型（model)，如比较常用的Lenet,Alexnet等， 而一个模型由多个层（layer）构成，每一层又由许多参数组成。要熟练使用caffe进行训练，最重要的就是学会配置文件（prototxt）的编写。层有很多种类型，比如Data,Co
      
    
    </summary>
    
      <category term="caffe" scheme="http://yoursite.com/categories/caffe/"/>
    
    
      <category term="caffe" scheme="http://yoursite.com/tags/caffe/"/>
    
  </entry>
  
  <entry>
    <title>hexo生成博客</title>
    <link href="http://yoursite.com/2017/12/04/hexo%E7%94%9F%E6%88%90%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2017/12/04/hexo生成博客/</id>
    <published>2017-12-04T13:01:39.000Z</published>
    <updated>2017-12-04T12:57:53.213Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="新建文档"><a href="#新建文档" class="headerlink" title="新建文档"></a>新建文档</h3><p>假设我们的文章名为 “My New Post”，在命令行键入以下命令即可：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure></p><p>上述命令的结果是在 <code>./source/_posts</code> 路径下新建了一个 My New Post.md 文件。</p><h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><h3 id="文档格式"><a href="#文档格式" class="headerlink" title="文档格式"></a>文档格式</h3><p>使用文本编辑器打开刚刚新建的 My New Post.md 文件，会发现其中已经存在内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: My New Post</span><br><span class="line">date: 2017-12-04 21:01:39</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>这是用于设置 MarkDown 文档在被解析为静态网页文件时的相关配置，这些配置参数一般位于文件中最上方以 <code>---</code> 分隔的区域。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title：当前文档名，也是将来在网页中显示的文章标题</span><br><span class="line">date ：新建文档时的当地时区时间。</span><br><span class="line">tags ：文档的标签，可以随意赋值作为文档贴标签。</span><br><span class="line">categories ：文章分类，用法同 tags 一样，不过 categories 值是分先后顺序的。</span><br></pre></td></tr></table></figure></p><h3 id="引用资源"><a href="#引用资源" class="headerlink" title="引用资源"></a>引用资源</h3><p>写博客有时候会想添加图片或者其他形式的资源，这时有两种解决方法：</p><ol><li>使用绝对路径引用资源，在 Web 世界中就是资源的 URL</li><li>使用相对路径引用资源</li></ol><p>如果是使用相对路径引用资源，使用文本编辑器打开站点根目录下的 <code>_ config.yml</code> 文件，<br>将 <code>post_asset_folder</code> 值设置为 true。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p>这个操作会开启 Hexo 的文章资源文件管理功能。Hexo 将会在 hexo new “title” 命令创建新文章时自动创建<br>一个同名文件夹，于是便可以将文章所引用的相关资源放到这个同名文件夹下，然后通过相对路径引用。</p><h3 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h3><p>设置文章摘要，只需在想显示为摘要的内容之后添 加 <code>&lt;!-- more --&gt;</code> 即可。如下所示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: My New Post</span><br><span class="line">date: 2017-12-04 21:01:39</span><br><span class="line">tags:</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">我是摘要(๑•̀ㅂ•́)و✧</span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"></span><br><span class="line">此处正文内容</span><br></pre></td></tr></table></figure></p><h2 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h2><h3 id="清除缓存文件"><a href="#清除缓存文件" class="headerlink" title="清除缓存文件"></a>清除缓存文件</h3><p>为了避免不必要的错误，在生成静态文件前，建议先运行以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure></p><p>此命令清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate 或 hexo g</span><br></pre></td></tr></table></figure><h3 id="远程部署"><a href="#远程部署" class="headerlink" title="远程部署"></a>远程部署</h3><p>生成好了本地静态站点，只需下面的命令，即可将其一键部署到服务器上。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy 或 hexo d</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;开始&quot;&gt;&lt;a href=&quot;#开始&quot; class=&quot;headerlink&quot; title=&quot;开始&quot;&gt;&lt;/a&gt;开始&lt;/h2&gt;&lt;h3 id=&quot;新建文档&quot;&gt;&lt;a href=&quot;#新建文档&quot; class=&quot;headerlink&quot; title=&quot;新建文档&quot;&gt;&lt;/a&gt;新建文档&lt;/h
      
    
    </summary>
    
      <category term="blog" scheme="http://yoursite.com/categories/blog/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown语法</title>
    <link href="http://yoursite.com/2017/12/03/MakeDown%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2017/12/03/MakeDown语法/</id>
    <published>2017-12-03T13:01:39.000Z</published>
    <updated>2017-12-04T11:25:14.960Z</updated>
    
    <content type="html"><![CDATA[<p>搭建好博客后，就可以进行博客写作了。写博客之前需要知道MarkDown语法，再次总结了一些常用的语法，供以后自己查阅。<br>这里是以hexo博客的样式进行说明的，首先需要在你的hexo本地博客文件夹目录的\source_posts\文件夹下执行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] <span class="string">"postName"</span></span><br></pre></td></tr></table></figure></p><p>其中layout是可选参数，默认值为post。对于layout有哪些参数，可以到scaffolds目录下查看，这些文件名称就是layout名称。你也可以添加自己的layout，方法就是添加一个文件即可，同时你也可以编辑现有的layout，比如post的layout默认是hexo\scaffolds\post.md。然后pastName可自定义命名。<br>基本用法如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[hexo](http://www.baidu.com)  表示超链接</span><br><span class="line"><span class="comment">##大标题</span></span><br><span class="line"><span class="comment">###小标题</span></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">&lt;!-- 标签别名 --&gt;</span><br><span class="line">&#123;% cq %&#125;blah blah blah&#123;% endcq %&#125;</span><br><span class="line">空格  中文全角空格表示</span><br><span class="line">---</span><br><span class="line">文章标题</span><br><span class="line">---</span><br><span class="line">&gt;内容     区块引用</span><br><span class="line">*1</span><br><span class="line">*2</span><br><span class="line">*3</span><br><span class="line">列表</span><br><span class="line">*内容*     表示强调内容</span><br><span class="line">![Alt text](/path/to/img.jpg)  图片</span><br><span class="line">![](/upload_image/20161012/1.png)</span><br></pre></td></tr></table></figure></p><p>详细Markdown语法请参考：<a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">MarkDown语法</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;搭建好博客后，就可以进行博客写作了。写博客之前需要知道MarkDown语法，再次总结了一些常用的语法，供以后自己查阅。&lt;br&gt;这里是以hexo博客的样式进行说明的，首先需要在你的hexo本地博客文件夹目录的\source_posts\文件夹下执行：&lt;br&gt;&lt;figure c
      
    
    </summary>
    
      <category term="blog" scheme="http://yoursite.com/categories/blog/"/>
    
    
      <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇文章</title>
    <link href="http://yoursite.com/2017/12/03/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <id>http://yoursite.com/2017/12/03/我的第一篇文章/</id>
    <published>2017-12-03T08:30:47.000Z</published>
    <updated>2017-12-04T13:59:39.093Z</updated>
    
    <content type="html"><![CDATA[<p>这是我的第一篇博客文章…<br>我想用它来记录一些学习的东西，空闲的时候来看看，也算是自己的一份财富。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是我的第一篇博客文章…&lt;br&gt;我想用它来记录一些学习的东西，空闲的时候来看看，也算是自己的一份财富。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
